
ff: parsing domain file
domain 'FAULTS' defined
 ... done.
ff: parsing problem file
problem 'FAULT_O4_F3' defined
 ... done.



Cueing down from goal distance:    5 into depth [1]
                                   4            [1]
                                   3            [1]
                                   2            [1]
                                   1            [1]
                                   0            

ff: found legal plan as follows

step    0: PERFORM_OPERATION_1_FAULT O1
        1: PERFORM_OPERATION_1_FAULT O2
        2: PERFORM_OPERATION_1_FAULT O3
        3: PERFORM_OPERATION_1_FAULT O4
        4: FINISH
     

Cueing down from goal distance:    1 into depth [1][2]
                                   0            

ff: found legal plan as follows

step    0: REPAIR_FAULT_1 O1
        1: PERFORM_OPERATION_1_FAULT O1
     

Cueing down from goal distance:    1 into depth [1][2]
                                   0            

ff: found legal plan as follows

step    0: REPAIR_FAULT_1 O2
        1: PERFORM_OPERATION_1_FAULT O2
     

Cueing down from goal distance:    1 into depth [1][2]
                                   0            

ff: found legal plan as follows

step    0: REPAIR_FAULT_1 O3
        1: PERFORM_OPERATION_1_FAULT O3
     

Cueing down from goal distance:    1 into depth [1][2]
                                   0            

ff: found legal plan as follows

step    0: REPAIR_FAULT_1 O4
        1: PERFORM_OPERATION_1_FAULT O4
     ##########################################
#####   PROCEDURE-LIKE CODE   ############
##########################################
   while(true){
      switch(state){
         case S0:	break;
         case S1:	PERFORM_OPERATION_1_FAULT O1;
         case S2:	PERFORM_OPERATION_1_FAULT O2;
         case S3:	PERFORM_OPERATION_1_FAULT O3;
         case S4:	PERFORM_OPERATION_1_FAULT O4;
         case S5:	FINISH;
         case S6:	break;
         case S7:	REPAIR_FAULT_1 O1;
         case S8:	PERFORM_OPERATION_1_FAULT O1;
         case S9:	REPAIR_FAULT_1 O2;
         case S10:	PERFORM_OPERATION_1_FAULT O2;
         case S11:	REPAIR_FAULT_1 O3;
         case S12:	PERFORM_OPERATION_1_FAULT O3;
         case S13:	REPAIR_FAULT_1 O4;
         case S14:	PERFORM_OPERATION_1_FAULT O4;
      }
   }
All states involved in final fip plan:
S0:
MADE()

S1:
NOT-LAST_FAULT(F1)
NOT-LAST_FAULT(F2)
NOT-LAST_FAULT(F3)
NOT_FAULT(F3)
NOT_FAULT(F2)
NOT_FAULT(F1)
NOT_COMPLETED(O4)
NOT_COMPLETED(O3)
NOT_COMPLETED(O2)
NOT_COMPLETED(O1)

S2:
NOT-LAST_FAULT(F1)
NOT-LAST_FAULT(F2)
NOT-LAST_FAULT(F3)
NOT_FAULT(F3)
NOT_FAULT(F2)
NOT_FAULT(F1)
NOT_COMPLETED(O4)
NOT_COMPLETED(O3)
NOT_COMPLETED(O2)
COMPLETED(O1)

S3:
NOT-LAST_FAULT(F1)
NOT-LAST_FAULT(F2)
NOT-LAST_FAULT(F3)
NOT_FAULT(F3)
NOT_FAULT(F2)
NOT_FAULT(F1)
NOT_COMPLETED(O4)
NOT_COMPLETED(O3)
COMPLETED(O1)
COMPLETED(O2)

S4:
NOT-LAST_FAULT(F1)
NOT-LAST_FAULT(F2)
NOT-LAST_FAULT(F3)
NOT_FAULT(F3)
NOT_FAULT(F2)
NOT_FAULT(F1)
NOT_COMPLETED(O4)
COMPLETED(O1)
COMPLETED(O2)
COMPLETED(O3)

S5:
NOT-LAST_FAULT(F1)
NOT-LAST_FAULT(F2)
NOT-LAST_FAULT(F3)
NOT_FAULT(F3)
NOT_FAULT(F2)
NOT_FAULT(F1)
COMPLETED(O1)
COMPLETED(O2)
COMPLETED(O3)
COMPLETED(O4)

S6:
NOT-LAST_FAULT(F1)
NOT-LAST_FAULT(F2)
NOT-LAST_FAULT(F3)
NOT_FAULT(F3)
NOT_FAULT(F2)
NOT_FAULT(F1)
COMPLETED(O1)
COMPLETED(O2)
COMPLETED(O3)
COMPLETED(O4)
MADE()

S7:
NOT-LAST_FAULT(F2)
NOT-LAST_FAULT(F3)
NOT_FAULT(F3)
NOT_FAULT(F2)
NOT_COMPLETED(O4)
NOT_COMPLETED(O3)
NOT_COMPLETED(O2)
COMPLETED(O1)
FAULT(F1)
FAULTED_OP(O1 F1)
LAST_FAULT(F1)

S8:
NOT-LAST_FAULT(F2)
NOT-LAST_FAULT(F3)
NOT_FAULT(F3)
NOT_FAULT(F2)
NOT_COMPLETED(O4)
NOT_COMPLETED(O3)
NOT_COMPLETED(O2)
FAULT(F1)
NOT_COMPLETED(O1)
NOT-LAST_FAULT(F1)
NOT_FAULT(F1)

S9:
NOT-LAST_FAULT(F2)
NOT-LAST_FAULT(F3)
NOT_FAULT(F3)
NOT_FAULT(F2)
NOT_COMPLETED(O4)
NOT_COMPLETED(O3)
COMPLETED(O1)
COMPLETED(O2)
FAULT(F1)
FAULTED_OP(O2 F1)
LAST_FAULT(F1)

S10:
NOT-LAST_FAULT(F2)
NOT-LAST_FAULT(F3)
NOT_FAULT(F3)
NOT_FAULT(F2)
NOT_COMPLETED(O4)
NOT_COMPLETED(O3)
COMPLETED(O1)
FAULT(F1)
NOT_COMPLETED(O2)
NOT-LAST_FAULT(F1)
NOT_FAULT(F1)

S11:
NOT-LAST_FAULT(F2)
NOT-LAST_FAULT(F3)
NOT_FAULT(F3)
NOT_FAULT(F2)
NOT_COMPLETED(O4)
COMPLETED(O1)
COMPLETED(O2)
COMPLETED(O3)
FAULT(F1)
FAULTED_OP(O3 F1)
LAST_FAULT(F1)

S12:
NOT-LAST_FAULT(F2)
NOT-LAST_FAULT(F3)
NOT_FAULT(F3)
NOT_FAULT(F2)
NOT_COMPLETED(O4)
COMPLETED(O1)
COMPLETED(O2)
FAULT(F1)
NOT_COMPLETED(O3)
NOT-LAST_FAULT(F1)
NOT_FAULT(F1)

S13:
NOT-LAST_FAULT(F2)
NOT-LAST_FAULT(F3)
NOT_FAULT(F3)
NOT_FAULT(F2)
COMPLETED(O1)
COMPLETED(O2)
COMPLETED(O3)
COMPLETED(O4)
FAULT(F1)
FAULTED_OP(O4 F1)
LAST_FAULT(F1)

S14:
NOT-LAST_FAULT(F2)
NOT-LAST_FAULT(F3)
NOT_FAULT(F3)
NOT_FAULT(F2)
COMPLETED(O1)
COMPLETED(O2)
COMPLETED(O3)
FAULT(F1)
NOT_COMPLETED(O4)
NOT-LAST_FAULT(F1)
NOT_FAULT(F1)

The total searching time is   0.003


time spent:   0.002 seconds instantiating 37 easy, 0 hard action templates
              0.000 seconds reachability analysis, yielding 33 facts and 37 actions
              0.000 seconds creating final representation with 33 relevant facts
              0.000 seconds building connectivity graph
              0.003 seconds searching, evaluating 3 states, to a max depth of 2
              0.005 seconds total time

